/**
 * [zipacker]{@link https://github.com/emn178/zipacker}
 *
 * @version 0.1.1
 * @author Chen, Yi-Cyuan [emn178@gmail.com]
 * @copyright Chen, Yi-Cyuan 2016
 * @license MIT
 */
(function(){function b(a){this.options=a||{};this.options.zipFile=this.options.zipFile||"download.zip";this.options.quota=this.options.quota||1073741824;this.tasks={};this.textTasks={};this.fs=new zip.fs.FS;"onDownloading onDownloaded onRequestedQuota onRequestedFileSystem onOpenedFile onCreatedFile onError onZipping onZipped onZippedBlob".split(" ").forEach(function(a){this[a]=this[a].bind(this)}.bind(this))}var g=window.requestFileSystem||window.webkitRequestFileSystem,e=navigator.webkitTemporaryStorage;
b.prototype.addBlob=function(a,c){this.fs.root.addBlob(c,a)};b.prototype.addData64URI=function(a,c){this.fs.root.addData64URI(c,a)};b.prototype.addText=function(a,c){this.fs.root.addText(c,a)};b.prototype.isDir=function(a){return""===a||"/"==a.charAt(a.length-1)};b.prototype.add=function(a,c){if(a.constructor==Blob)return this.addBlob(a,c);var b=this.tasks,e=!1,d;c=c||"";if(Array.isArray(a))this.isDir(c)||(c+="/");else{if("object"==typeof a){for(var f in a)this.add(f,a[f]);return}e=!this.isDir(c);
a=[a]}a.forEach(function(a){if(e)d=c;else{var f=a.split("/");d=f[f.length-1];d=d.split("?")[0];d=c+d}b[a]||(b[a]=[]);b[a].push(d)})};b.prototype.doTasks=function(){var a=this.fs,c;for(c in this.tasks)this.tasks[c].forEach(function(b){a.root.addHttpContent(b,c)})};b.prototype.onError=function(a){this.options.onError&&this.options.onError.call(this,a)};b.prototype.onZipping=function(a,b){this.options.onProgress&&this.options.onProgress.call(this,a,b,"zip");this.options.onZipping&&this.options.onZipping.call(this,
a,b)};b.prototype.onDone=function(){this.options.onZipped&&this.options.onZipped.call(this);this.options.onDone&&this.options.onDone.call(this)};b.prototype.onZipped=function(){this.onDone();location.href=this.fileEntry.toURL()};b.prototype.onZippedBlob=function(a){this.onDone();saveAs(a,this.options.zipFile)};b.prototype.onCreatedFile=function(a){this.doTasks();this.fileEntry=a;this.fs.exportFileEntry(a,this.onZipped,this.onZipping,this.onError)};b.prototype.onOpenedFile=function(a){a.remove(function(){a.filesystem.root.getFile(this.options.zipFile,
{create:!0},this.onCreatedFile)}.bind(this),this.onError)};b.prototype.onRequestedFileSystem=function(a){a.root.getFile(this.options.zipFile,{create:!0},this.onOpenedFile)};b.prototype.onRequestedQuota=function(a){g(TEMPORARY,a,this.onRequestedFileSystem,this.onError)};b.prototype.onDownloading=function(a,b){this.options.onProgress&&this.options.onProgress.call(this,a,b,"download");this.options.onDownloading&&this.options.onDownloading.call(this,a,b)};b.prototype.onDownloaded=function(){this.options.onDownloaded&&
this.options.onDownloaded.call(this);e?e.requestQuota(this.options.quota,this.onRequestedQuota,this.onError):(this.doTasks(),this.fs.exportBlob(this.onZippedBlob,this.onZipping,this.onError))};b.prototype.download=function(){var a=Object.keys(this.tasks);preload({files:a,onProgress:this.onDownloading,onLoad:this.onDownloaded})};window.Zipacker=b})();
